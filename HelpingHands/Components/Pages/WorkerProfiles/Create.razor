@page "/workerprofiles/create"
@rendermode InteractiveServer

@using HelpingHands

@inject HelpingHands.Data.HelpingHandsContext DB
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h4>Worker Profiles</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="profile" OnValidSubmit="AddWorkerProfile" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />

            <div class="mb-3">
                <label for="name" class="form-label">Name:</label> 
                <InputText id="name" @bind-Value="profile.Name" class="form-control" /> 
                <ValidationMessage For="() => profile.Name" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="bio" class="form-label">Bio:</label> 
                @* <InputText id="bio" @bind-Value="profile.Bio" class="form-control" /> *@
                <InputTextArea id="bio" @bind-Value="profile.Bio" class="form-control"></InputTextArea>
                <ValidationMessage For="() => profile.Bio" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="handle" class="form-label">Handle:</label> 
                <InputText id="handle" @bind-Value="profile.Handle" class="form-control" /> 
                <ValidationMessage For="() => profile.Handle" class="text-danger" /> 
            </div>
            <div class="mb-3">
                <label for="location" class="form-label">Location:</label> 
                <InputText id="location" @bind-Value="profile.Location" class="form-control" /> 
                <ValidationMessage For="() => profile.Location" class="text-danger" /> 
            </div>
            <div class="mb-3">
                <label for="tags" class="form-label">Tags:</label> 
                <InputText id="tags" @bind-Value="profile.Tags" class="form-control" /> 
                <ValidationMessage For="() => profile.Tags" class="text-danger" />
            </div>
            <button type="submit" class="btn btn-primary">Create</button>

        </EditForm>
    </div>
</div>

<div>
    <a href="/workerprofiles">Back to List</a>
</div>

@code {

    [SupplyParameterFromForm]
    public WorkerProfile_CLASS profile { get; set; } = new();

    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task AddWorkerProfile()
    {
        await DB.WorkerProfile_CLASS.AddAsync(profile);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/workerprofiles");
    }
}
