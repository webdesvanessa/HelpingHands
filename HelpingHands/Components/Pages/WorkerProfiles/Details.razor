@page "/workerprofiles/details"
@inject HelpingHands.Data.HelpingHandsContext DB
@using HelpingHands
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h4>Worker Profile</h4>
    <hr />
    @if (profile is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@profile.Name</dd>
            <dt class="col-sm-2">Bio</dt>
            <dd class="col-sm-10">@profile.Bio</dd>
            <dt class="col-sm-2">Handle</dt>
            <dd class="col-sm-10">@profile.Handle</dd>
            <dt class="col-sm-2">Location</dt>
            <dd class="col-sm-10">@profile.Location</dd>
            <dt class="col-sm-2">Tags</dt>
            <dd class="col-sm-10">@profile.Tags</dd>
        </dl>
        <div>
            <a href="@($"/workerprofiles/edit?id={profile.Id}")">Edit</a> |
            <a href="@($"/workerprofiles")">Back to List</a>
        </div>
    }
</div>

@code {
    WorkerProfile_CLASS? profile;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        profile = await DB.WorkerProfile_CLASS.FirstOrDefaultAsync(m => m.Id == Id);

        if (profile is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
